class Solution {
public:
    int solveTab(vector<int>& nums)
    {
        int n=nums.size();
        int include=0,exclude=0;

        vector<int> dp(n,0);  // Dp initialization

        dp[0]=nums[0]; // Initialization of Dp First Element

        for(int i=1;i<n;i++)
        {
            include=nums[i];
            if(i>1) include+=dp[i-2];
            exclude=dp[i-1]+0;
            dp[i]=max(include,exclude);
        }

        return dp[n-1];
    }
    
    
    int rob(vector<int>& nums) {
        if(nums.size()==1) return nums[0];
        vector<int> nums1,nums2;
        for(int i=0;i<nums.size()-1;i++)
        {
            nums1.push_back(nums[i]); //once creating a vector for elemnts upto second last ele
        }
         for(int i=1;i<nums.size();i++)
        {
            nums2.push_back(nums[i]); //creating another vector of elements excluding first ele
        }
        int ans1=solveTab(nums1);
        int ans2=solveTab(nums2);
        return max(ans1,ans2);
        
        }
};
